@page "/film-hinzufuegen"
@using FilmDB.BLAZOR.Models
@using FilmDB.BLAZOR.Services
@using Microsoft.AspNetCore.Authorization
@using DevExpress.Blazor
@inject FilmDBService FilmDBService
@inject NavigationManager NavigationManager

@attribute [Authorize]

<PageTitle>Film hinzufügen</PageTitle>

<style>
    .rating {
        display: inline-flex;
        flex-direction: row-reverse;
        gap: 0.3rem;
    }

    .rating .star {
        cursor: pointer;
        font-size: 1.5rem;
        color: #ccc;
        transition: color 0.2s ease;
    }

    .rating .star.active,
    .rating .star:hover,
    .rating .star:hover ~ .star {
        color: #ffc107;
    }
</style>

<DxCard>
    <DxCardHeader>
        <h5 class="mb-0">Neuen Film erfassen</h5>
    </DxCardHeader>
    <DxCardBody>
        <EditForm Model="@neuerFilm" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="row">
                <div class="col-md-6">
                    <DxFormLayout>
                        <DxFormLayoutItem Caption="Titel" ColSpanMd="12">
                            <Template Context="formLayoutContext">
                                <DxTextBox @bind-Text="@neuerFilm.Titel"
                                         ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                         NullText="Filmtitel eingeben..." />
                                <ValidationMessage For="@(() => neuerFilm.Titel)" />
                            </Template>
                        </DxFormLayoutItem>
                    </DxFormLayout>
                </div>
                <div class="col-md-3">
                    <DxFormLayout>
                        <DxFormLayoutItem Caption="Gesehen am" ColSpanMd="12">
                            <Template Context="formLayoutContext">
                                <DxDateEdit @bind-Date="@neuerFilm.GesehenAm"
                                          DisplayFormat="dd.MM.yyyy" />
                                <ValidationMessage For="@(() => neuerFilm.GesehenAm)" />
                            </Template>
                        </DxFormLayoutItem>
                    </DxFormLayout>
                </div>
                <div class="col-md-3">
                    <DxFormLayout>
                        <DxFormLayoutItem Caption="Bewertung" ColSpanMd="12">
                            <Template Context="formLayoutContext">
                                <div class="rating">
                                    @for (int i = 5; i >= 1; i--)
                                    {
                                        var rating = i;
                                        <i class="bi bi-star-fill star @(rating <= neuerFilm.Bewertung ? "active" : "")"
                                           @onclick="() => SetRating(rating)"
                                           @onmouseover="() => HoverRating = rating"
                                           @onmouseout="() => HoverRating = 0"></i>
                                    }
                                </div>
                                <ValidationMessage For="@(() => neuerFilm.Bewertung)" />
                            </Template>
                        </DxFormLayoutItem>
                    </DxFormLayout>
                </div>
            </div>

            <div class="row mt-3">
                <div class="col-md-6">
                    <DxFormLayout>
                        <DxFormLayoutItem Caption="Sender" ColSpanMd="12">
                            <Template Context="formLayoutContext">
                                <DxComboBox Data="@sender"
                                          @bind-Value="@neuerFilm.GesehenBeiID"
                                          TextFieldName="@nameof(SenderModel.Sendername)"
                                          ValueFieldName="@nameof(SenderModel.ID)"
                                          NullText="-- Sender auswählen --"
                                          ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" />
                                <ValidationMessage For="@(() => neuerFilm.GesehenBeiID)" />
                            </Template>
                        </DxFormLayoutItem>
                    </DxFormLayout>
                </div>
                <div class="col-md-6">
                    <DxFormLayout>
                        <DxFormLayoutItem Caption="Kommentar" ColSpanMd="12">
                            <Template Context="formLayoutContext">
                                <DxMemo @bind-Text="@neuerFilm.Kommentar"
                                       Rows="3"
                                       ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                       NullText="Kommentar eingeben..." />
                            </Template>
                        </DxFormLayoutItem>
                    </DxFormLayout>
                </div>
            </div>

            <div class="row mt-4">
                <div class="col-12 text-end">
                    <DxButton Text="Film hinzufügen"
                             SubmitFormOnClick="true"
                             RenderStyle="ButtonRenderStyle.Primary"
                             IconCssClass="bi bi-plus-circle me-2" />
                </div>
            </div>
        </EditForm>
    </DxCardBody>
</DxCard>

@code {
    private List<SenderModel>? sender;
    private GesehenModel neuerFilm = new() { GesehenAm = DateTime.Today };
    private int HoverRating { get; set; }

    protected override async Task OnInitializedAsync()
    {
        sender = await FilmDBService.GetSenderAsync();
    }

    private void SetRating(int rating)
    {
        neuerFilm.Bewertung = rating;
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            await FilmDBService.CreateGesehenAsync(neuerFilm);
            NavigationManager.NavigateTo("gesehen");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Fehler beim Speichern: {ex.Message}");
        }
    }
} 